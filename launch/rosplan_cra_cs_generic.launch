<?xml version="1.0"?>
<launch>
	<arg name="semantic_map_namespace"	 	default="map_generic_cs" /> <!-- map_bringing_object -->

	<arg name="domain_name" default="apartment" /> <!-- "apartment_domain"    OR   "apartment" "match_cellar"  "crew_planning"   "rovers"  "office_robot" NOTE: SELECT THE PROPER PATH BELOW-->
	<arg name="problem_name" default="instance-2" /> <!-- "apartment_problem"   OR   "instance-1"  "instance-2"   "instance-3"-->
	<arg name="evaluation"	 	default="false" />

	<!-- <arg name="domain_path"		default="$(find know_cra)/pddl/domain/$(arg domain_name).pddl" /> -->
	<arg name="domain_path"		default="$(find know_cra)/pddl/test-domains/$(arg domain_name)/domain.pddl" />
	<!-- <arg name="problem_path"	default="$(find know_cra)/pddl/problem/$(arg problem_name).pddl" /> -->
	<arg name="problem_path"	default="$(find know_cra)/pddl/test-domains/$(arg domain_name)/instances/$(arg problem_name).pddl" />
	<arg name="narrator_name"	default="" />
	<arg name="print_actions"	default="false" />

	

	<!-- Include rosplan -->
	<include file="$(find know_cra)/launch/rosplan_full.launch">
		<arg name="domain_path"		 		value="$(arg domain_path)" />
		<arg name="problem_path" 			value="$(arg problem_path)" />
		<arg name="planning_language" 		value="PDDL" />
		<arg name="planner_topic" 			value="planner_output" />
		<arg name="data_path" 				value="/tmp/" />
		<arg name="generated_problem_path"	value="/tmp/gen_problem.pddl" />
		<arg name="dispatcher" 				value="simple" /> <!-- Check to add the parser when needed -->
		<!-- (in next lines) -n is to optimize the problem during the timeout - instead of just getting the first found plan - it might be the case that no optimal or better plan is found during the timeout -->
		<arg name="planner_command"      	value="timeout 1 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == false)" /> 
		<arg name="planner_command"      	value="timeout 120 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == true)"/>
		<arg name="planner_interface"    	value="popf_planner_interface" />
	</include>

	<!-- Include rosplan-rosprolog node -->
	<node name="rosplan_rosprolog_node" pkg="know_cra" type="planning_for_acxon_objective_evaluation.py" output="screen">
		<param name="semantic_map_namespace" value="$(arg semantic_map_namespace)" /> 
        </node>

</launch>
