<?xml version="1.0"?>
<launch>
	<arg name="plan_adaptation_case" default="unfolded_cloth" />
	<arg name="semantic_map_namespace"	 	default="map_piling_cloth" />

	<arg name="domain_path"		default="$(find know_cra)/pddl/domain/collaborative_cloth_piling_domain.pddl" />
	<arg name="problem_path"	default="$(find know_cra)/pddl/problem/collaborative_cloth_piling_problem_$(arg plan_adaptation_case).pddl" />
	<arg name="narrator_name"	default="" />
	<arg name="print_actions"	default="false" />
	<arg name="evaluation"	 	default="false" />

	<arg name="knowrob_settings" default="$(find knowrob)/settings/default.pl" />
	<arg name="owl_file" default="$(find know_cra)/owl/maps/map_cra_cs_piling_cloth.owl" />

	<!-- Include rosplan -->
	<include file="$(find know_cra)/launch/rosplan_full.launch">
		<arg name="domain_path"		 		value="$(arg domain_path)" />
		<arg name="problem_path" 			value="$(arg problem_path)" />
		<arg name="planning_language" 		value="PDDL" />
		<arg name="planner_topic" 			value="planner_output" />
		<arg name="data_path" 				value="/tmp/" />
		<arg name="generated_problem_path"	value="/tmp/gen_problem.pddl" />
		<arg name="dispatcher" 				value="simple" /> <!-- Check to add the parser when needed -->
		<!-- (in next lines) -n is to optimize the problem during the timeout - instead of just getting the first found plan - it might be the case that no optimal or better plan is found during the timeout -->
		<arg name="planner_command"      	value="timeout 10 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == false)" /> 
		<arg name="planner_command"      	value="timeout 120 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == true)"/>
		<arg name="planner_interface"    	value="popf_planner_interface" />
	</include>
	
	<!-- Include rosprolog knowledge base -->
	<env name="KNOWROB_SETTINGS" value="$(arg knowrob_settings)" /> <!-- Configure settings file. -->
	<include file="$(find rosprolog)/launch/rosprolog.launch">
		<arg name="initial_package" default="know_cra" />
		<arg name="initial_goal" default="load_owl('$(arg owl_file)')." />
	</include>

	<!-- Include rosplan-rosprolog node -->
	<node name="rosplan_rosprolog_node" pkg="know_cra" type="planning_and_neem_generation_for_plan_adaptation.py" output="screen">
		<param name="plan_adaptation_case" value="$(arg plan_adaptation_case)" /> 
		<param name="semantic_map_namespace" value="$(arg semantic_map_namespace)" />  
        </node>

</launch>
